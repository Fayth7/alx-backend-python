#!/usr/bin/env python3
11;rgb:0000/0000/0000"""
Asynchronous coroutine that waits for a random delay between 0 and max_delay
(inclusive) seconds and eventually returns it.
"""

import asyncio
import random


async def wait_random(max_delay: int = 10) -> float:
    """
    Asynchronous coroutine that waits for random delay between 0 & max_delay
    (inclusive) seconds and eventually returns it.

    :param max_delay: The maximum delay in seconds (default is 10).
    :return: The random delay.
    """
    random_delay = random.uniform(0, max_delay)
    await asyncio.sleep(random_delay)
    return random_delay


if __name__ == "__main__":
    # Example usage
    print(asyncio.run(wait_random()))
    print(asyncio.run(wait_random(5)))
    print(asyncio.run(wait_random(15)))
